  DONE: support 1 dim ptr

	TODO: support 2 dim ptr <===
KEYLIST
	TODO: typedef <==
	TODO: struct
  TODO: support preprocessor


	TODO: auto add ret instruction
	TODO: switch, struct def & dot & ptr, break, continue
	TODO: support struct initializer
	TODO: array + struct

- NOTE: the only external resource I refer is the grammar of C language
- TODO: let the make file support dependency on header file
NOTE: we can try to compile mongoose/memcached/ITSELF!! with my compiler :)
need distinguish declarator and abstract_declarator <== parse these 2 at the same time
TODO: type conversion/check?

=========== EXTRA

Compiler optimization
1. copy duplication

TODO: complete type system; I'd better extract the pure type out of syntax tree (this is partial done)
TODO: n-queen (the code is about 3 times slower than the one generated by GCC. I'd like to optimize the compiler :))
TODO: how to reclaim the memory for 'type' object (may use reference cnt)
TODO: analyze memleak
TODO: use stack to store temporary right now. Need implement advanced register allocation algorithms
TODO: make the compiler support both 32 bit and 64 bit asm?

========== DONE
- translate sample.c back to C
- translate sample.c to asm (32 bit)
- support for, while, if, (recursive) function call, && || short cut, global variable, one & multi dim array
- support insertion sort, bubble sort, nqueen
- a simple integration test framework
