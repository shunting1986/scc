  Last NOTE: we can support mongoose and memcached now. The next job is make the code more robust and fix the problems below :)

================== 
  TODO: fprintf( char) may have problem, the 'add esp' will only count 1 for the char.
	TODO: support 'for (int ...)'

- NOTE: The scope of struct/union/enum/typedef/func is similar to variable. When we exit a brace, these definitions are gone as well.
	struct, union, enum share a name space; typedef, func, var share one. 
	func is special. 1. it can have multiple declaration in one scope; 2. inner scope can not have different specification to outer one

	TODO how to handle statements before any label inside switch, should they be interprected before the cond expr of after that?

- NOTE: the only external resource I refer is the grammar of C language
- TODO: let the make file support dependency on header file

  NOTE: we can try to compile mongoose (DONE) /memcached (DONE) /ITSELF!! with my compiler :)

  TODO: support static local variable


  Compiler optimization
  1. copy duplication

TODO: n-queen (the code is about 3 times slower than the one generated by GCC. I'd like to optimize the compiler :))
TODO: analyze memleak
TODO: use stack to store temporary right now. Need implement advanced register allocation algorithms
TODO: make the compiler support both 32 bit and 64 bit asm?

TODO: remove the dependency of the include file search path on GCC installation

TODO: syntax
- avoid interp the expression inside sizeof (e.g. ++)

========== DONE
- translate sample.c back to C
- translate sample.c to asm (32 bit)
- support 
	+ for, while, do-while, if, break loop, continue, (recursive) function call
	+ && || short cut, global variable, one & multi dim array, 
	+ one & multi dim pointer, automatically add trailing return statement, 
	+ typedef, reference count mechanism for type structure, conditional expr
	+ obj & func macro
	+ cond compiling
	+ struct/union definition and dot, ptr operation
	+ support include "stdio.h"
- succeed to build mongoose
- support insertion sort, bubble sort, nqueen
- a simple integration test framework

