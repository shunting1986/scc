  ACHIEVEMENT:
	1. [DONE] util.c
	2. [DONE] daemon.c (switch is not supported yet. Luckily daemonize is not executed)
	3. [DONE] cache.c

  HERE: assoc.c



	TODO: support 'for (int ...)'

	TODO: cgasm support named initializer (both local and global cases)
	TODO: check that the dumpped memcached.c has named initializer correctly dumped
	NOTE: name in named initializer can have multiple nesting level: a.b.c = 1;

	TODO: support specify index to initialize array

  KEYSTEPS: check cmds
	TODO: we right now use a modified memcached.c. avoid it at last

  TODO: next step is support build memcached :)
	1. [DONE] build with memcached orig makefile 
	2. [DONE] build manually with orig C

	3. parse and dump C back
	  
	4. build with dumpped C
	5. create .s
	6. build with .s
	7. run

NOTE:
	TODO: consider type when do operation
	1. ptr + integer
	2. ptr - ptr
	3. assign
	4. type conversion
	5. type check when assign / make func call

  the scope of struct/union/enum/typedef/func is similar to variable. When we exit a brace, these definitions are gone as well.
	struct union, enum share a name space; typedef, func, var share one. 
	func is special. 1. it can have multiple declaration in one scope; 2. inner scope can not have different specification to outer one

	TODO: switch (and break inside switch), 

- NOTE: the only external resource I refer is the grammar of C language
- TODO: let the make file support dependency on header file
NOTE: we can try to compile mongoose (DONE) /memcached/ITSELF!! with my compiler :)
TODO: type conversion/check?

TODO: handle local typedef and local extern (don't alloc storage for them)
TODO: support static local variable

=========== EXTRA

Compiler optimization
1. copy duplication

TODO: n-queen (the code is about 3 times slower than the one generated by GCC. I'd like to optimize the compiler :))
TODO: analyze memleak
TODO: use stack to store temporary right now. Need implement advanced register allocation algorithms
TODO: make the compiler support both 32 bit and 64 bit asm?

TODO: remove the dependency of the include file search path on GCC installation

TODO: syntax
- avoid interp the expression inside sizeof (e.g. ++)

========== DONE
- translate sample.c back to C
- translate sample.c to asm (32 bit)
- support 
	+ for, while, do-while, if, break loop, continue, (recursive) function call
	+ && || short cut, global variable, one & multi dim array, 
	+ one & multi dim pointer, automatically add trailing return statement, 
	+ typedef, reference count mechanism for type structure, conditional expr
	+ obj & func macro
	+ cond compiling
	+ struct/union definition and dot, ptr operation
	+ support include "stdio.h"
- succeed to build mongoose
- support insertion sort, bubble sort, nqueen
- a simple integration test framework

